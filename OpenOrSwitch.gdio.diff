diff --git a/autoload/fetch.vim b/autoload/fetch.vim
--- ./autoload/fetch.vim
+++ ./autoload/fetch.vim
@@ -181,7 +181,9 @@ if has('file_in_path') " {{{
     " @returns:    Boolean
     " @notes:      - will test all available specs for a match
     "              - will fall back on Vim's |gF| when no spec matches
-  function! fetch#cfile(count) abort " {{{
+    function! fetch#cfile(buffername, mode) abort " {{{
+        let realpath = substitute(system("realpath " . '"' . a:buffername . '"'), '\n', '', '')
+        let bnr = bufwinnr('^' . realpath . '$')
         let l:cfile = expand('<cfile>')
 
         if !empty(l:cfile)
@@ -200,14 +202,24 @@ if has('file_in_path') " {{{
                 if match(l:line, l:spec.pattern, l:offset) is l:offset
                     let l:match = matchstr(l:line, l:spec.pattern, l:offset)
                     " leverage Vim's own |gf| for opening the file
-          execute 'normal!' a:count.'gf'
+
+                    if bnr > 0
+                        exe bnr . "wincmd w"
+                    else
+                        silent exec a:mode . ' ' . a:buffername
+                    endif
+
                     return s:setpos(l:spec.parse(l:cfile.l:match)[1])
                 endif
             endfor
         endif
 
-    " fall back to Vim's |gF|
-    execute 'normal!' a:count.'gF'
+        if bnr > 0
+            exe bnr . "wincmd w"
+        else
+            silent exec a:mode . ' ' . a:buffername
+        endif
+
         return 1
     endfunction " }}}
 
@@ -296,5 +308,3 @@ endif
 
 let &cpoptions = s:cpoptions
 unlet! s:cpoptions
-
-" vim:set sw=2 sts=2 ts=2 et fdm=marker fmr={{{,}}}:
diff --git a/plugin/fetch.vim b/plugin/fetch.vim
--- ./plugin/fetch.vim
+++ ./plugin/fetch.vim
@@ -55,5 +55,3 @@ endif
 
 let &cpoptions = s:cpoptions
 unlet! s:cpoptions
-
-" vim:set sw=2 sts=2 ts=2 et fdm=marker fmr={{{,}}}:
